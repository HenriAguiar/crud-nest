datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

model Evento {
  id             Int            @id @default(autoincrement())
  titulo         String
  descricao      String
  imagemCard     String         @default("")
  imagemCapa     String         @default("")
  dataInicio     DateTime
  dataFim        DateTime
  local          String
  site           String
  tags           EventoTag[]
  programacoes   Programacao[]
  ingressos      Ingresso[]
  produtos       ProdutoOnEvento[] 
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}
model TipoAtividade {
  id             Int               @id @default(autoincrement())
  nome           String            @unique
  atividades     Atividade[]
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
}
model Programacao {
  id             Int           @id @default(autoincrement())
  titulo         String
  atividades     Atividade[]
  eventoId       Int
  evento         Evento        @relation(fields: [eventoId], references: [id])
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}
model Atividade {
  id             Int               @id @default(autoincrement())
  titulo         String
  descricao      String
  horarioInicio  DateTime
  horarioFim     DateTime
  local          String
  tipoAtividadeId Int
  tipoAtividade  TipoAtividade     @relation(fields: [tipoAtividadeId], references: [id])
  programacaoId  Int
  programacao    Programacao       @relation(fields: [programacaoId], references: [id])
  convidados     AtividadeConvidado[]
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
}
model AtividadeConvidado {
  atividadeId    Int
  convidadoId    Int
  atividade      Atividade         @relation(fields: [atividadeId], references: [id])
  convidado      Convidado         @relation(fields: [convidadoId], references: [id])
  @@id([atividadeId, convidadoId])
}

model Convidado {
  id             Int                     @id @default(autoincrement())
  nome           String
  miniBiografia  String                  @map("mini_biografia")
  foto           String
  instagram      String?
  linkedin       String?
  twitter        String?
  facebook       String?
  github         String?                 
  lattes         String?                 
  atividades     AtividadeConvidado[]  
  createdAt      DateTime                @default(now())
  updatedAt      DateTime                @updatedAt
}
model Ingresso {
    id             Int            @id @default(autoincrement())
    tipo           String
    descricao      String
    preco          Float
    quantidade     Int
    eventoId       Int            @map("evento_id")
    evento         Evento         @relation(fields: [eventoId], references: [id], onDelete: Cascade)
    createdAt      DateTime       @default(now())
    updatedAt      DateTime       @updatedAt

    @@unique([id, eventoId])
    @@map("ingressos")
}

model Produto {
    id             Int            @id @default(autoincrement())
    nome           String
    descricao      String
    foto           String         @default("")
    preco          Float
    eventos        ProdutoOnEvento[] 
    createdAt      DateTime       @default(now())
    updatedAt      DateTime       @updatedAt
}

model ProdutoOnEvento {
    id             Int            @id @default(autoincrement())
    eventoId       Int
    produtoId      Int
    quantidade     Int  
    evento         Evento         @relation(fields: [eventoId], references: [id])
    produto        Produto        @relation(fields: [produtoId], references: [id])
    createdAt      DateTime       @default(now())
    updatedAt      DateTime       @updatedAt

    @@unique([eventoId, produtoId])
}

    
model EventoTag {
    tagId       Int
    eventoId    Int
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    tag         tag      @relation(fields: [tagId], references: [id])
    evento      Evento   @relation(fields: [eventoId], references: [id])
    @@id([eventoId, tagId])
}
model tag {
    id          Int      @id @default(autoincrement())
    nome        String
    eventos     EventoTag[]
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}
